// <auto-generated />
using System;
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(CalendarDbContext))]
    [Migration("20250402122946_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Begin = new DateTime(2025, 4, 2, 13, 29, 45, 990, DateTimeKind.Local).AddTicks(666),
                            Description = "Evt A description",
                            End = new DateTime(2025, 4, 2, 14, 29, 45, 990, DateTimeKind.Local).AddTicks(793),
                            Name = "Event A"
                        },
                        new
                        {
                            Id = 2,
                            Begin = new DateTime(2025, 4, 2, 14, 29, 45, 990, DateTimeKind.Local).AddTicks(798),
                            Description = "Evt B description",
                            End = new DateTime(2025, 4, 2, 15, 29, 45, 990, DateTimeKind.Local).AddTicks(799),
                            Name = "Event B"
                        },
                        new
                        {
                            Id = 3,
                            Begin = new DateTime(2025, 4, 2, 15, 29, 45, 990, DateTimeKind.Local).AddTicks(801),
                            Description = "Evt B description",
                            End = new DateTime(2025, 4, 2, 16, 29, 45, 990, DateTimeKind.Local).AddTicks(803),
                            Name = "Event C"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
